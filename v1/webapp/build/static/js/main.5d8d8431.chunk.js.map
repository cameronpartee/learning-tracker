{"version":3,"sources":["pages/DetailPage.js","components/Cell.js","pages/ListView.js","App.js","index.js"],"names":["DetailPage","props","useState","setTasks","setIsLoading","setHttpError","useEffect","a","fetch","response","ok","Error","json","key","responseData","loadedTasks","push","id","topic","description","difficulty","date","timeEstimate","url","resources","fetchTasks","catch","error","message","Container","Text","to","style","textDecoration","task","Sandbox","SandboxText","src","alt","styled","div","Cell","CellContainer","height","CellText","title","ListView","marginTop","marginLeft","tasks","map","App","className","path","element","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5d8d8431.chunk.js","sourcesContent":["import styled from \"styled-components\";\nimport { useEffect, useState } from \"react\";\nimport { BsBackspaceFill } from \"react-icons/bs\";\nimport { Link } from \"react-router-dom\";\n\nconst DetailPage = (props) => {\n  const [tasks, setTasks] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [httpError, setHttpError] = useState();\n\n  useEffect(() => {\n    const fetchTasks = async () => {\n      const response = await fetch(\n        \"https://learningtracker-a8476-default-rtdb.firebaseio.com/tasks.json\"\n      );\n\n      if (!response.ok) {\n        throw new Error(\"Something went wrong!\");\n      }\n\n      const responseData = await response.json();\n      const loadedTasks = [];\n\n      // NEED TO ADD ANSWER PROPERTY\n      for (const key in responseData) {\n        loadedTasks.push({\n          id: key,\n          topic: responseData[key].topic,\n          description: responseData[key].description,\n          difficulty: responseData[key].difficulty,\n          date: responseData[key].date,\n          timeEstimate: responseData[key].timeEstimate,\n          url: responseData[key].resources,\n        });\n      }\n\n      setTasks(loadedTasks);\n      setIsLoading(false);\n    };\n\n    fetchTasks().catch((error) => {\n      setIsLoading(false);\n      setHttpError(error.message);\n    });\n  }, []);\n  return (\n    <Container>\n      <Text>\n        <Link to=\"/\" style={{ textDecoration: \"none\" }}>\n          <BsBackspaceFill />\n        </Link>\n        <div>Problem Statement</div>\n        <div>{props.task.description}</div>\n        <div>Example 1:</div>\n      </Text>\n      <Sandbox>\n        <SandboxText>{\"cp$ npx create-react-app app-name\"}</SandboxText>\n      </Sandbox>\n      <img src=\"https://i.stack.imgur.com/TXGoT.png\" alt=\"\" />\n    </Container>\n  );\n};\n\nexport default DetailPage;\n\nconst Container = styled.div`\n  margin-top: 30px;\n  margin-left: 30px;\n\n  img {\n    margin-top: 30px;\n    width: 90%;\n  }\n`;\n\nconst Text = styled.div`\n   svg {\n    margin-bottom: 35px;\n   }\n\n  > div:nth-child(2) {\n    font-size: 1.5em;\n    font-weight: 600;\n    color: rgb(10, 10, 10);\n    letter-spacing: 1px;\n    margin-bottom: 15px;\n  }\n\n  > div:nth-child(3) {\n    margin-bottom: 20px;\n    color: rgb(85, 85, 85);\n  }\n\n  > div:last-child {\n    font-weight: 600;\n    color: rgb(10, 10, 10);\n    letter-spacing: 1px;\n    font-size 0.9em;\n    margin-bottom: 15px;\n  }\n`;\n\nconst Sandbox = styled.div`\n  width: 90%;\n  height: 80px;\n  background: rgb(10, 10, 10);\n  border: 1px grey solid;\n`;\n\nconst SandboxText = styled.div`\n  margin-left: 10px;\n  margin-top: 15px;\n  color: rgb(53, 192, 161);\n`;\n","import styled from \"styled-components\";\nimport { Link } from \"react-router-dom\";\n\nconst Cell = (props) => {\n  return (\n    <Link to=\"/detail\" style={{ textDecoration: \"none\" }}>\n      <CellContainer>\n        <img src=\"/img/greyblock.png\" alt=\"\" style={{ height: \"6px\" }} />\n        <CellText>{props.title}</CellText>\n        <img src=\"/img/dots.png\" alt=\"\" style={{ height: \"6px\" }} />\n      </CellContainer>\n    </Link>\n  );\n};\n\nexport default Cell;\n\nconst CellContainer = styled.div`\n  display: flex;\n  align-items: center;\n  border: 1px rgb(245, 245, 245) solid;\n  border-radius: 4px;\n  position: relative;\n  margin: 10px;\n  padding: 4px;\n\n  img {\n    margin-left: 5px;\n  }\n\n  img:last-child {\n    position: absolute;\n    right: 10px;\n  }\n\n  :hover {\n    background: rgb(245, 245, 245);\n    cursor: pointer;\n  }\n`;\n\nconst CellText = styled.div`\n  font-size: 1em;\n  font-weight: 500;\n  color: rgb(50, 50, 50);\n  margin-left: 5px;\n`;\n","import { BsQuestionCircleFill } from \"react-icons/bs\";\nimport styled from \"styled-components\";\nimport Cell from \"../components/Cell\";\n\nconst ListView = (props) => {\n  return (\n    <Container>\n      <img\n        src=\"/img/logo.png\"\n        alt=\"\"\n        style={{\n          height: \"20px\",\n          marginTop: \"15px\",\n          marginLeft: \"15px\",\n        }}\n      />\n      <BsQuestionCircleFill />\n      {props.tasks.map((task) => (\n        <Cell title={task.topic} />\n      ))}\n    </Container>\n  );\n};\n\nexport default ListView;\n\nconst Container = styled.div`\n  margin: 10px;\n  position: relative;\n  img {\n    width: auto%;\n  }\n\n  svg {\n    position: absolute;\n    right: 30px;\n    top: 15px;\n  }\n`;\n","import { BrowserRouter, Route, Routes } from \"react-router-dom\";\nimport { useEffect, useState } from \"react\";\nimport DetailPage from \"./pages/DetailPage\";\nimport ListView from \"./pages/ListView\";\n\n// HTTP GET REQUEST FROM FIREBASE\n// ROUTING\nfunction App() {\n  const [tasks, setTasks] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [httpError, setHttpError] = useState();\n\n  useEffect(() => {\n    const fetchTasks = async () => {\n      const response = await fetch(\n        \"https://learningtracker-a8476-default-rtdb.firebaseio.com/tasks.json\"\n      );\n\n      if (!response.ok) {\n        throw new Error(\"Something went wrong!\");\n      }\n\n      const responseData = await response.json();\n      const loadedTasks = [];\n\n      for (const key in responseData) {\n        loadedTasks.push({\n          id: key,\n          topic: responseData[key].topic,\n          description: responseData[key].description,\n          difficulty: responseData[key].difficulty,\n          date: responseData[key].date,\n          timeEstimate: responseData[key].timeEstimate,\n          url: responseData[key].resources,\n        });\n      }\n\n      setTasks(loadedTasks);\n      setIsLoading(false);\n    };\n\n    fetchTasks().catch((error) => {\n      setIsLoading(false);\n      setHttpError(error.message);\n    });\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <BrowserRouter>\n        <Routes>\n          <Route path=\"/\" element={<ListView tasks={tasks} />}></Route>\n          <Route\n            path=\"/detail\"\n            element={<DetailPage task={tasks[8]} />}\n          ></Route>\n        </Routes>\n      </BrowserRouter>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}